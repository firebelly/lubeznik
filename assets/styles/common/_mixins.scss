// Mixins

// Global UI Transition
@mixin transition($properties...) {
  transition-duration: $transition-duration;
  transition-property: $properties;
  transition-timing-function: $transition-easing;
}

// Animated hover for user-content links
@mixin inline-link($slide-target:'&') {
  #{$slide-target} {
    background-image: linear-gradient(to bottom, color(yellow) 0%, color(yellow) 100%);
    background-repeat: repeat-x;
    background-position: 0% 100%;
    background-size: 0px 0px;
    text-decoration: underline;
    @include transition(background-size);
  }
  &:hover,
  &:focus {
    #{$slide-target} {
      background-size: 100% 100%;
      transition-delay: 0s;
    }
  }
}

// Faux dropshadow
@mixin drop-shadow() {
  &::after {
    content: '';
    position: absolute;
    width: 100%;
    top: 100%;
    left: 0;
    background: linear-gradient(to bottom, rgba(0,0,0,0.09) 0%, rgba(0,0,0,0.02) 50%, rgba(0,0,0,0) 100%);
    height: 16px;
    pointer-events: none;
  }
}

// Clearfix
@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}
%clearfix {
  @include clearfix;
}

@mixin vertical-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Screen reader only
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Aspect ratio padding mixin
@mixin aspect-ratio($width, $height) {
  display: block;
  position: relative;
  height: 0;
  padding-top: #{$height / $width * 100%};
}

// Smooth text
@mixin smooth {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
%smooth {
  @include smooth;
}

// Responsive mixins by Andy Richardson (@andimal): https://github.com/andimal/sass-responsive-mixin-madness
@mixin media-xs() {
  @media screen and (max-width: $breakpoint-sm - 1) {
    @content;
  }
}
@mixin media-sm() {
  @media screen and (min-width: $breakpoint-sm) {
    @content;
  }
}
@mixin media-md() {
  @media screen and (min-width: $breakpoint-md) {
    @content;
  }
}
@mixin media-nav() {
  @media screen and (min-width: $breakpoint-nav) {
    @content;
  }
}
@mixin media-lg() {
  @media screen and (min-width: $breakpoint-lg) {
    @content;
  }
}
@mixin media-xl() {
  @media screen and (min-width: $breakpoint-xl) {
    @content;
  }
}

// On-the fly media-queries
@mixin screen($res-min, $res-max) {
  @media screen and (min-width: $res-min) and (max-width: #{$res-max - 1px}) {
    @content;
  }
}
@mixin max-screen($res) {
  @media screen and (max-width: #{$res - 1px}) {
    @content;
  }
}
@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}
