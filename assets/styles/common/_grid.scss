// Grid system

$grid: 10px;
$gutter: 20px;

// Padding/Spacing
$padding-xs: 16px;
$padding-sm: 64px;
$padding-md: 80px;
$padding-lg: $padding-md * 2;

@mixin padding($direction: 'both', $sides: 'both') {
  @if $direction == 'both' or $direction == 'vertical' {
    @if $sides == 'both' or $sides == 'top' {
      padding-top: $padding-xs;
      @include media-sm {
        padding-top: $padding-sm;
      }
      @include media-md {
        padding-top: $padding-md;
      }
      @include media-lg {
        padding-top: $padding-lg;
      }
    }
    @if $sides == 'both' or $sides == 'bottom' {
      padding-bottom: $padding-xs;
      @include media-sm {
        padding-bottom: $padding-sm;
      }
      @include media-md {
        padding-bottom: $padding-md;
      }
      @include media-lg {
        padding-bottom: $padding-lg;
      }
    }
  }
  @if $direction == 'both' or $direction == 'horizontal' {
    @if $sides == 'both' or $sides == 'left' {
      padding-left: $padding-xs;
      @include media-sm {
        padding-left: $padding-sm;
      }
      @include media-md {
        padding-left: $padding-md;
      }
      @include media-lg {
        padding-left: $padding-lg;
      }
    }
    @if $sides == 'both' or $sides == 'right' {
      padding-right: $padding-xs;
      @include media-sm {
        padding-right: $padding-sm;
      }
      @include media-md {
        padding-right: $padding-md;
      }
      @include media-lg {
        padding-right: $padding-lg;
      }
    }
  }
}
%padding,
.padding {
  @include padding('both', 'both');
}
%padding-vertical,
.padding-vertical {
  @include padding('vertical');
}
%padding-top,
.padding-top {
  @include padding('vertical', 'top');
}
%padding-bottom,
.padding-bottom {
  @include padding('vertical', 'bottom');
}
%padding-horizontal,
.padding-horizontal {
  @include padding('horizontal');
}
%padding-left,
.padding-left {
  @include padding('horizontal', 'left');
}
%padding-right,
.padding-right {
  @include padding('horizontal', 'right');
}

$global-columns: 10;
$column-width: 100% / $global-columns;

// Quickie columns($num-columns, $parent-num-columns) function
@function columns($num-columns, $parent-num-columns: $global-columns) {
  @return $column-width * $num-columns * ($global-columns / $parent-num-columns);
}
@function grid($num) {
  @return $grid * $num;
}

// Common padding
@mixin global-padding($desktop-padding:12, $desktop-parent-columns:$global-columns) {
  padding: $padding-sm;

  // Desktop styles
  @include media-md {
    padding: grid($desktop-padding) columns(2, $desktop-parent-columns);
  }
}

.row {
  @include clearfix;
}

// Global flexbox grid styles
.grid {
  width: 100%;
  display: block;
  @include min-screen($breakpoint-md) {
    display: flex;
    flex-wrap: wrap;
  }
  &.-persist {
    display: flex;
  }
}

.grid.-persist {
  .grid-item {
    flex-basis: auto;
  }
  .one-fourth {
    max-width: 25%;
    flex-basis: 25%;
  }
  .one-third {
    flex-basis: 33.3333333%;
    max-width: 33.3333333%;
  }
  .one-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .two-thirds {
    flex-basis: 66.6666667%;
    max-width: 66.6666667%;
  }
}

@include min-screen($breakpoint-md) {
  .grid-item {
    flex-basis: auto;
  }
  .one-fourth {
    max-width: 25%;
    flex-basis: 25%;
  }
  .one-third {
    flex-basis: 33.3333333%;
    max-width: 33.3333333%;
  }
  .one-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .two-thirds {
    flex-basis: 66.6666667%;
    max-width: 66.6666667%;
  }
}
